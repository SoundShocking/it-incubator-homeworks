{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","message","avatar","src","alt","name","messageBox","username","messageText","messageTime","time","messageData","HW1","Affair","affair","clsx","priority","low","middle","high","onClick","deleteAffairCallback","_id","btnDelete","Affairs","mappedAffairs","data","map","filters","setFilter","btn","filter","btnActive","defaultAffairs","HW2","useState","affairs","setAffairs","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onKeyPressHandler","inputClass","input","inputRow","value","onChange","onKeyPress","addButton","errorText","countUsers","GreetingContainer","users","addUserCallback","setName","setError","alert","length","e","currentTarget","trim","key","HW3","setUsers","newUser","v4","SuperInputText","type","onChangeText","onEnter","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","console","log","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","button","disabled","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.dc67f59c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__1EXwg\",\"affair\":\"Affairs_affair__jxpiZ\",\"low\":\"Affairs_low__3b8Ga\",\"middle\":\"Affairs_middle__3Scxu\",\"high\":\"Affairs_high____6tY\",\"filters\":\"Affairs_filters__21P2C\",\"btn\":\"Affairs_btn__KULa6\",\"btnActive\":\"Affairs_btnActive__1uOl0\",\"btnDelete\":\"Affairs_btnDelete__2N4m1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2w_KB\",\"column\":\"HW4_column__3FtqC\",\"testSpanError\":\"HW4_testSpanError__2u43T\",\"input\":\"HW4_input__307fU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1dixq\",\"avatar\":\"Message_avatar__BvmJi\",\"messageBox\":\"Message_messageBox__38apq\",\"username\":\"Message_username__3n1rs\",\"messageText\":\"Message_messageText__1OQUT\",\"messageTime\":\"Message_messageTime__2GMKI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Greeting_error__y9OaL\",\"errorText\":\"Greeting_errorText__3BM7-\",\"countUsers\":\"Greeting_countUsers__1CDag\",\"inputRow\":\"Greeting_inputRow__2fjLI\",\"input\":\"Greeting_input__16Hm0\",\"addButton\":\"Greeting_addButton__21eSj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1RRX7\",\"errorInput\":\"SuperInputText_errorInput__3oGw9\",\"error\":\"SuperInputText_error__D_zJh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__29js2\",\"red\":\"SuperButton_red__3dWIx\",\"button\":\"SuperButton_button__1HERK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__EIvr_\",\"spanClassName\":\"SuperCheckbox_spanClassName__21amU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1lx7D\"};","import React, { FC } from 'react'\r\nimport styles from './Message.module.css'\r\n\r\ntype PropsType = {\r\n\tavatar: string\r\n\tname: string\r\n\tmessage: string\r\n\ttime: string\r\n}\r\n\r\nconst Message: FC<PropsType> = (props) => {\r\n\treturn (\r\n\t\t<div className={styles.message}>\r\n\t\t\t<div className={styles.avatar}>\r\n\t\t\t\t<img src={props.avatar} alt={props.name} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={styles.messageBox}>\r\n\t\t\t\t<div className={styles.username}>\r\n\t\t\t\t\t{props.name}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={styles.messageText}>\r\n\t\t\t\t\t{props.message}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={styles.messageTime}>\r\n\t\t\t\t\t{props.time}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n\tavatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n\tname: 'Some Name',\r\n\tmessage: 'some text',\r\n\ttime: '22:00',\r\n}\r\n\r\nfunction HW1() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"homework__title\">\r\n\t\t\t\tHomework 1\r\n\t\t\t</div>\r\n\r\n\t\t\t<Message\r\n\t\t\t\tavatar={ messageData.avatar }\r\n\t\t\t\tname={ messageData.name }\r\n\t\t\t\tmessage={ messageData.message }\r\n\t\t\t\ttime={ messageData.time }\r\n\t\t\t/>\r\n\r\n\t\t\t<hr />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default HW1\r\n","import { FC } from 'react'\r\nimport clsx from \"clsx\";\r\nimport { AffairType } from \"./HW2\";\r\nimport styles from './Affairs.module.css'\r\n\r\ntype AffairPropsType = {\r\n\taffair: AffairType\r\n\tdeleteAffairCallback: (id: number) => void\r\n}\r\n\r\nconst Affair: FC<AffairPropsType> = (props) => {\r\n\tconst deleteCallback = () => {\r\n\t\tprops.deleteAffairCallback(props.affair._id)\r\n\t}// need to fix\r\n\r\n\treturn (\r\n\t\t<div className={ styles.affair }>\r\n\t\t\t<div>{ props.affair.name }</div>\r\n\t\t\t<div className={ clsx(\r\n\t\t\t\t[props.affair.priority === 'low' && styles.low],\r\n\t\t\t\t[props.affair.priority === 'middle' && styles.middle],\r\n\t\t\t\t[props.affair.priority === 'high' && styles.high]\r\n\t\t\t) }\r\n\t\t\t>{ props.affair.priority }</div>\r\n\r\n\t\t\t<button onClick={ deleteCallback } className={styles.btnDelete}>X</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Affair\r\n","import { FC } from \"react\";\r\nimport Affair from './Affair'\r\nimport { AffairType, FilterType } from './HW2'\r\nimport styles from './Affairs.module.css'\r\nimport clsx from \"clsx\";\r\n\r\ntype AffairsPropsType = {\r\n\tdata: AffairType[]\r\n\tsetFilter: (filter: FilterType) => void\r\n\tdeleteAffairCallback: (id: number) => void\r\n\tfilter: FilterType\r\n}\r\n\r\nconst Affairs: FC<AffairsPropsType> = (props) => {\r\n\tconst mappedAffairs = props.data.map((affair: AffairType) => (\r\n\t\t<Affair\r\n\t\t\tkey={ affair._id }\r\n\t\t\taffair={ affair }\r\n\t\t\tdeleteAffairCallback={ props.deleteAffairCallback }\r\n\t\t/>\r\n\t))\r\n\r\n\tconst setAll = () => props.setFilter('all')\r\n\tconst setHigh = () => props.setFilter('high')\r\n\tconst setMiddle = () => props.setFilter('middle')\r\n\tconst setLow = () => props.setFilter('low')\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{ mappedAffairs }\r\n\r\n\t\t\t<div className={ styles.filters }>\r\n\t\t\t\t<button onClick={ setAll } className={ clsx([styles.btn], [props.filter === 'all' && styles.btnActive]) }>All</button>\r\n\t\t\t\t<button onClick={ setHigh } className={ clsx([styles.btn], [props.filter === 'high' && styles.btnActive]) }>High</button>\r\n\t\t\t\t<button onClick={ setMiddle } className={ clsx([styles.btn], [props.filter === 'middle' && styles.btnActive]) }>Middle</button>\r\n\t\t\t\t<button onClick={ setLow } className={ clsx([styles.btn], [props.filter === 'low' && styles.btnActive]) }>Low</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Affairs\r\n","import { FC, useState } from 'react'\r\nimport Affairs from './Affairs'\r\nimport styles from './Affairs.module.css'\r\n\r\n// types\r\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\r\nexport type AffairType = {\r\n\t_id: number\r\n\tname: string\r\n\tpriority: AffairPriorityType\r\n}\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: AffairType[] = [\r\n\t{ _id: 1, name: 'React', priority: 'high' },\r\n\t{ _id: 2, name: 'anime', priority: 'low' },\r\n\t{ _id: 3, name: 'games', priority: 'low' },\r\n\t{ _id: 4, name: 'work', priority: 'high' },\r\n\t{ _id: 5, name: 'html & css', priority: 'middle' },\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\r\n\tif (filter === 'all') {\r\n\t\treturn affairs\r\n\t} else {\r\n\t\treturn affairs.filter(affair => affair.priority === filter)\r\n\t}\r\n}\r\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => {\r\n\treturn affairs.filter(affair => affair._id !== _id)\r\n}\r\n\r\nconst HW2: FC = () => {\r\n\tconst [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs)\r\n\tconst [filter, setFilter] = useState<FilterType>('all')\r\n\r\n\tconst filteredAffairs = filterAffairs(affairs, filter)\r\n\tconst deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"homework__title\">Homework 2</div>\r\n\r\n\t\t\t<div className={ styles.affairs }>\r\n\t\t\t\t<Affairs\r\n\t\t\t\t\tdata={ filteredAffairs }\r\n\t\t\t\t\tsetFilter={ setFilter }\r\n\t\t\t\t\tdeleteAffairCallback={ deleteAffairCallback }\r\n\t\t\t\t\tfilter={filter}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<hr />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default HW2","import { ChangeEvent, FC, KeyboardEvent } from 'react'\r\nimport clsx from \"clsx\";\r\nimport styles from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n\tname: string\r\n\tsetNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n\taddUser: () => void\r\n\terror: string\r\n\ttotalUsers: number\r\n\tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst Greeting: FC<GreetingPropsType> = (\r\n\t{ name, setNameCallback, addUser, error, totalUsers, onKeyPressHandler } // деструктуризация пропсов\r\n) => {\r\n\tconst inputClass = clsx([error && styles.error], [styles.input])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={ styles.inputRow }>\r\n\t\t\t\t<input value={ name } onChange={ setNameCallback } className={ inputClass } onKeyPress={ onKeyPressHandler } />\r\n\t\t\t\t<button onClick={ addUser } className={ styles.addButton }>add</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{ error && <div className={ styles.errorText }>{ error }</div> }\r\n\r\n\t\t\t<div className={ styles.countUsers }>Users: { totalUsers }</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Greeting\r\n","import { ChangeEvent, FC, KeyboardEvent, useState } from 'react'\r\nimport Greeting from './Greeting'\r\nimport { UserType } from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n\tusers: UserType[]\r\n\taddUserCallback: (name: string) => void\r\n}\r\n\r\nconst GreetingContainer: FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => { // деструктуризация пропсов\r\n\tconst [name, setName] = useState<string>('')\r\n\tconst [error, setError] = useState<string>('')\r\n\r\n\tconst setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tif (!e.currentTarget.value.trim()) {\r\n\t\t\tsetError('name is required')\r\n\t\t} else {\r\n\t\t\tsetError('')\r\n\t\t}\r\n\t\tsetName(e.currentTarget.value)\r\n\t}\r\n\r\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\taddUser()\r\n\t\t}\r\n\t}\r\n\r\n\tconst addUser = () => {\r\n\t\tif (name) {\r\n\t\t\talert(`Hello ${ name }!`)\r\n\t\t\taddUserCallback(name)\r\n\t\t\tsetName('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst totalUsers = users.length\r\n\r\n\treturn (\r\n\t\t<Greeting\r\n\t\t\tname={ name }\r\n\t\t\tsetNameCallback={ setNameCallback }\r\n\t\t\taddUser={ addUser }\r\n\t\t\terror={ error }\r\n\t\t\ttotalUsers={ totalUsers }\r\n\t\t\tonKeyPressHandler={ onKeyPressHandler }\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default GreetingContainer\r\n","import { useState } from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport { v4 } from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n\t_id: string\r\n\tname: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n\tconst [users, setUsers] = useState<UserType[]>([])\r\n\r\n\tconst addUserCallback = (name: string) => {\r\n\t\tconst newUser: UserType = {\r\n\t\t\t_id: v4(),\r\n\t\t\tname\r\n\t\t}\r\n\t\tsetUsers([...users, newUser])\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"homework__title\">Homework 3</div>\r\n\r\n\t\t\t<GreetingContainer users={ users } addUserCallback={ addUserCallback } />\r\n\r\n\t\t\t<hr />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default HW3\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n\tonChangeText?: (value: string) => void\r\n\tonEnter?: () => void\r\n\terror?: string\r\n\tspanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n\t{\r\n\t\ttype, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n\t\tonChange, onChangeText,\r\n\t\tonKeyPress, onEnter,\r\n\t\terror,\r\n\t\tclassName, spanClassName,\r\n\r\n\t\t...restProps// все остальные пропсы попадут в объект restProps\r\n\t}\r\n) => {\r\n\tconst onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\tonChange // если есть пропс onChange\r\n\t\t&& onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n\t\tonChangeText && onChangeText(e.currentTarget.value)\r\n\t}\r\n\r\n\tconst onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\t\tonKeyPress && onKeyPress(e);\r\n\r\n\t\tonEnter && e.key === 'Enter' && onEnter()\r\n\t}\r\n\r\n\tconst finalSpanClassName = `${ s.error } ${ spanClassName ? spanClassName : '' }`\r\n\tconst finalInputClassName = `${ error ? s.errorInput : '' } ${ s.superInput } ${ className ? className : '' }`\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<input\r\n\t\t\t\ttype={ 'text' }\r\n\t\t\t\tonChange={ onChangeCallback }\r\n\t\t\t\tonKeyPress={ onKeyPressCallback }\r\n\t\t\t\tclassName={ finalInputClassName }\r\n\r\n\t\t\t\t{ ...restProps } // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n\t\t\t/>\r\n\t\t\t{ error && <span className={ finalSpanClassName }>{ error }</span> }\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, { ButtonHTMLAttributes, DetailedHTMLProps } from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n\tred?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n\t{\r\n\t\tred,\r\n\t\tclassName,\r\n\t\t...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n\t}\r\n) => {\r\n\tconst finalClassName = `${ red ? s.red : s.default } ${ className }`\r\n\r\n\treturn (\r\n\t\t<button\r\n\t\t\tclassName={ finalClassName }\r\n\t\t\t{ ...restProps } // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default SuperButton\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n\tonChangeChecked?: (checked: boolean) => void\r\n\tspanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n\t{\r\n\t\ttype, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n\t\tonChange, onChangeChecked,\r\n\t\tclassName, spanClassName,\r\n\t\tchildren, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n\t\t...restProps// все остальные пропсы попадут в объект restProps\r\n\t}\r\n) => {\r\n\tconst onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n\t\t// сделайте так чтоб работал onChange и onChangeChecked\r\n\t\tconsole.log('change', e.currentTarget.checked)\r\n\t\tonChange && onChange(e)\r\n\r\n\t\tonChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n\t}\r\n\r\n\tconst finalInputClassName = `${ s.checkbox } ${ className ? className : '' }`\r\n\r\n\treturn (\r\n\t\t<label>\r\n\t\t\t<input\r\n\t\t\t\ttype={ 'checkbox' }\r\n\t\t\t\tonChange={ onChangeCallback }\r\n\t\t\t\tclassName={ finalInputClassName }\r\n\r\n\t\t\t\t{ ...restProps } // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n\t\t\t/>\r\n\t\t\t{ children && <span className={ s.spanClassName }>{ children }</span> }\r\n\t\t</label> // благодаря label нажатие на спан передастся в инпут\r\n\t)\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, { ChangeEvent, useState } from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n\tconst [text, setText] = useState<string>('')\r\n\tconst error = text ? '' : 'error'\r\n\r\n\tconst showAlert = () => {\r\n\t\tif (error) {\r\n\t\t\talert('введите текст...')\r\n\t\t} else {\r\n\t\t\talert(text) // если нет ошибки показать текст\r\n\t\t}\r\n\t}\r\n\r\n\tconst [checked, setChecked] = useState<boolean>(false)\r\n\tconst testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className=\"homework__title\">\r\n\t\t\t\tHomework 4\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={ s.column }>\r\n\t\t\t\t<SuperInputText\r\n\t\t\t\t\tvalue={ text }\r\n\t\t\t\t\tonChangeText={ setText }\r\n\t\t\t\t\tonEnter={ showAlert }\r\n\t\t\t\t\terror={ error }\r\n\t\t\t\t\tspanClassName={ s.testSpanError }\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<SuperInputText\r\n\t\t\t\t\tclassName={ `${ s.blue } ${ s.input }` } // проверьте, рабоет ли смешивание классов\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{/*----------------------------------------------------*/ }\r\n\r\n\t\t\t\t<SuperButton className={ s.button }>\r\n\t\t\t\t\tdefault\r\n\t\t\t\t</SuperButton>\r\n\r\n\t\t\t\t<SuperButton\r\n\t\t\t\t\tred // пропсу с булевым значением не обязательно указывать true\r\n\t\t\t\t\tonClick={ showAlert }\r\n\t\t\t\t\tclassName={ s.button }\r\n\t\t\t\t>\r\n\t\t\t\t\tdelete {/*// название кнопки попадёт в children*/ }\r\n\t\t\t\t</SuperButton>\r\n\r\n\t\t\t\t<SuperButton disabled>\r\n\t\t\t\t\tdisabled\r\n\t\t\t\t</SuperButton>\r\n\r\n\t\t\t\t{/*----------------------------------------------------*/ }\r\n\r\n\t\t\t\t<SuperCheckbox\r\n\t\t\t\t\tchecked={ checked }\r\n\t\t\t\t\tonChangeChecked={ setChecked }\r\n\t\t\t\t\tclassName={ s.button }\r\n\t\t\t\t>\r\n\t\t\t\t\tsome text {/*// этот текст попадёт в children*/ }\r\n\t\t\t\t</SuperCheckbox>\r\n\r\n\t\t\t\t{/*// onChange тоже должен работать*/ }\r\n\t\t\t\t<SuperCheckbox checked={ checked } onChange={ testOnChange } />\r\n\t\t\t</div>\r\n\r\n\t\t\t<hr />\r\n\t\t\t{/*для личного творчества, могу проверить*/ }\r\n\t\t\t{/*<AlternativeSuperInputText/>*/ }\r\n\t\t\t{/*<AlternativeSuperButton/>*/ }\r\n\t\t\t{/*<AlternativeSuperCheckbox/>*/ }\r\n\t\t\t<hr />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            // add NavLinks\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    // add paths\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n            {/*<Switch>*/}\r\n\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\r\n\r\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\r\n                // add routes\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            {/*<Route render={() => <Error404/>}/>*/}\r\n\r\n            {/*</Switch>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport Routes from './Routes'\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            {/*<HashRouter>*/}\r\n\r\n            <Header/>\r\n\r\n            <Routes/>\r\n\r\n            {/*</HashRouter>*/}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from '../../../p2-homeworks/h2/HW2'\r\nimport HW3 from '../../../p2-homeworks/h3/HW3'\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className={ s.App }>\r\n\t\t\t<HW1 />\r\n\t\t\t<HW2 />\r\n\t\t\t<HW3 />\r\n\t\t\t<HW4 />\r\n\t\t\t<HW5 />\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}